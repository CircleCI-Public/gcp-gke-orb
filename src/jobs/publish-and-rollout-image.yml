
description: "Update cluster with new Docker image."
executor: <<parameters.executor>>
parameters:
  cluster:
    description: "The Kubernetes cluster name."
    type: string
  deployment:
    description: "The Kubernetes deployment name."
    type: string
  container:
    description: "The Kubernetes container name."
    type: string
  gcloud-service-key:
    description: The gcloud service key
    type: env_var_name
    default: GCLOUD_SERVICE_KEY
  google-project-id:
    description: The Google project ID to connect with via the gcloud CLI
    type: env_var_name
    default: GOOGLE_PROJECT_ID
  google-compute-zone:
    description: The Google compute zone to connect with via the gcloud CLI
    type: env_var_name
    default: GOOGLE_COMPUTE_ZONE
  google-compute-region:
    description: The Google compute region to connect with via the gcloud CLI
    type: env_var_name
    default: GOOGLE_COMPUTE_REGION
  registry-url:
    description: The GCR registry URL from ['', us, eu, asia].gcr.io
    type: string
    default: gcr.io
  image:
    description: A name for your docker image
    type: string
  tag:
    description: A docker image tag
    type: string
    default: "latest"
  namespace:
    description: "The Kubernetes namespace name."
    type: string
    default: ""
  dockerfile-dir:
    description: >
        Path to the directory containing your Dockerfile,
        defaults to . (working directory)
    type: string
    default: .
  dockerfile-name:
    description: 'Name of dockerfile to use, defaults to Dockerfile'
    type: string
    default: Dockerfile
  extra-build-args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ''
  executor:
    description: >
        Executor to use for this job
    type: executor
    default: default
  use-remote-docker:
    description: >
      Setup a remote Docker engine for Docker commands? Only required
      if using a Docker-based executor
    type: boolean
    default: true
  remote-docker-version:
    description: >
      Setup a version for remote Docker engine.
    default: 17.09.0-ce
    type: string
  dry-run:
    default: none
    description: |
      Used for image rollout. Must be "none", "server", or "client". If client strategy, only print the object that would be sent, without sending it.
      If server strategy, submit server-side request without persisting the resource.
    type: enum
    enum: ["none", "server", "client"]
  docker-context:
    type: string
    default: .
    description: >
      Path to the directory containing your build context, defaults to .
      (working directory)
steps:
  - when:
      condition: <<parameters.use-remote-docker>>
      steps:
          - setup_remote_docker:
              version: <<parameters.use-remote-docker>>
  - checkout
  - gcr/gcr-auth:
      gcloud-service-key: <<parameters.gcloud-service-key>>
      google-project-id: <<parameters.google-project-id>>
      google-compute-zone: <<parameters.google-compute-zone>>
      google-compute-region: <<parameters.google-compute-region>>
  - install
  - gcr/build-image:
      registry-url: <<parameters.registry-url>>
      google-project-id: <<parameters.google-project-id>>
      image: <<parameters.image>>
      tag: << parameters.tag >>
      path: <<parameters.dockerfile-dir>>
      dockerfile: <<parameters.dockerfile-name>>
      docker-context: <<parameters.docker-context>>
      extra_build_args: <<parameters.extra-build-args>>
  - gcr/push-image:
      registry-url: <<parameters.registry-url>>
      google-project-id: <<parameters.google-project-id>>
      image: <<parameters.image>>
      tag: <<parameters.tag>>
  - rollout-image:
      cluster: "<<parameters.cluster>>"
      deployment: "<<parameters.deployment>>"
      container: "<<parameters.container>>"
      image: "<<parameters.registry-url>>/$<<parameters.google-project-id>>/<<parameters.image>>"
      tag: "<<parameters.tag>>"
      namespace: "<<parameters.namespace>>"
      dry-run: "<<parameters.dry-run>>"
